
REMI : One role of the operating system is
to manage files using a file management system, or file system.
PETRA : Remember that not so long ago,
programs and data used to be stored on punch cards.
In this picture, each little box contains 2,000 punch cards,
with each card holding up to 80 characters.
The boxes themselves are grouped into pallets, each of which holds 45 boxes.
The total number of characters stored on the punch cards
shown in this picture it's about 4.3 billion,
about the same amount of data that a four-gigabyte flash drive can store.
REMI : You can imagine that the abilities to store programs on disk drives
revolutionized the world of programming.
Very quickly, one could store hundreds, thousands,
or even millions of files on these drives
without having to pick up thousands of boxes and search for a program.
PETRA : For the user, a file system is best visualized as a tree.
Files are grouped into directories, or folders--
a concept used by most operating systems.
These directories contain further files and/or other directories.
So there's a root directory and then a number of subdirectories.
Such an organization generates a hierarchy of directories and files
organized into a tree.
REMI : On Unix/Linux, the root of the file system is denoted slash.
The root folder would, therefore, be slash.
A folder and a subfolder will be denoted slash folder slash subfolder.
A file in that subfolder will be denoted slash
folder slash subfolder slash file.
PETRA : How do we organize the hierarchy of directories and files?
From the user's point of view, well, it's up to them
to decide how to organize their own files and folders.
REMI : The operating system itself has lots
of files to keep track of, as well --
utility programs, applications, methods to communicate with devices, et cetera.
In August 1993, the process of standardizing the file system hierarchy
began.
FSSTND, Filesystem Standard, is a standard specific
to the Filesystem hierarchy to GNU Linux.
PETRA : The vast majority of GNU Linux distributions
do not strictly follow this standardization format.
We're going to give you some directory names that
can be found in the vast majority of Linux distributions.
REMI : First : /bin
This is the directory which contains all of the basic commands needed
to start and use a minimal system.
The directory name is derived from the abbreviation of binary.
The executable file of an application is called a binary.
PETRA : Next : /sbin
This directory contains commands--
executable, so binaries-- for the super user, also called root user.
The root user is the administrator of the computer
and has more powers than simple users.
Superpowers, I would say.
REMI : Then, we have : /home
Home contains all of user directories-- for example,
/home/smith or /home/remi for me.
PETRA : Then, there is /root
This is the home directory of the root user,
the user that has the superpowers.
REMI : Next, we have /etc.
This directory contains configuration files.
In fact, it is the abbreviation of Editable Text Configuration.
PETRA : Then comes /lib
Here, the system stores software libraries required for executables
in /bin and /sbin
REMI : Also important is /tmp
This directory is for temporary files.
Sometimes, it is located in /var/tmp or /run/tmp
It is usually emptied every time you restart the computer.
So be careful.
When you use this folder and restart your computer,
everything will be destroyed inside.
PETRA : And then there is /var
This contains various files used by the operating system, such as databases,
email boxes, and history.
A log of what happened on the system is in /var/logs, for example.
REMI : Next, we have /usr
USR is the acronym of Unix System Resources,
and not user, as one might think.
This folder contains some subfolders, similar to those present
that the roots, but they are used to extend the system operations.
For example, this folder includes /usr/bin
That contains executable binaries that are not already present in /bin
and, therefore, not essential to a minimal system.
Or /usr/lib that contains those libraries that are not essential
for a minimal system.
PETRA : Finally, we have /dev
This directory contains files, each of which
corresponds, directly or indirectly, to a physical device.
dev is a decent abbreviation for device.
This is one of the strengths of Linux.
It considers everything as a file, including devices,
such as /dev/printer, /dev/audio, /dev/mem for memory, /dev/networkcard,
and so forth.
REMI : Now that you know a lot more about the structure of the file system,
let's explore what's inside.
